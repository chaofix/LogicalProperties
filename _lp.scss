$wm: '';

@function wm($value) {
  @if ($value == 'ver-l') {
    @return vertical-lr;
  } @else if ($value == 'ver-r') {
    @return vertical-rl;
  } @else {
    @return horizontal-tb;
  }
}

@mixin lp($t, $values...) {
  @if ($t == 'margin' or $t == 'padding') {
    @if (length($values) == 1) {
      #{$t}: $values;
      #{$t}-block-start: $values;
      #{$t}-inline-start: $values;
      #{$t}-block-end: $values;
      #{$t}-inline-end: $values;
    } @else if (length($values) == 2) {

      @if ($wm == 'ver-l') {
        #{$t}: nth($values, 2) nth($values, 1);
      } @else if ($wm == 'ver-r') {
        #{$t}: nth($values, 2) nth($values, 1);
      } @else {
        #{$t}: nth($values, 1) nth($values, 2);
      }
      #{$t}-block-start: nth($values, 1);
      #{$t}-inline-start: nth($values, 2);
      #{$t}-block-end: nth($values, 1);
      #{$t}-inline-end: nth($values, 2);
    } @else if (length($values) == 3) {

      @if ($wm == 'ver-l') {
        #{$t}: nth($values, 2) nth($values, 3) nth($values, 2) nth($values, 1);
      } @else if ($wm == 'ver-r') {
        #{$t}: nth($values, 2) nth($values, 1) nth($values, 2) nth($values, 3);
      } @else {
        #{$t}: nth($values, 1) nth($values, 2) nth($values, 3);
      }
      #{$t}-block-start: nth($values, 1);
      #{$t}-inline-start: nth($values, 2);
      #{$t}-block-end: nth($values, 3);
      #{$t}-inline-end: nth($values, 2);
    } @else if (length($values) == 4) {

      @if ($wm == 'ver-l') {
        #{$t}: nth($values, 4) nth($values, 2) nth($values, 3) nth($values, 1);
      } @else if ($wm == 'ver-r') {
        #{$t}: nth($values, 4) nth($values, 2) nth($values, 3) nth($values, 1);
      } @else {
        #{$t}: nth($values, 1) nth($values, 2) nth($values, 3) nth($values, 4);
      }
      #{$t}-block-start: nth($values, 1);
      #{$t}-inline-start: nth($values, 4);
      #{$t}-block-end: nth($values, 2);
      #{$t}-inline-end: nth($values, 3);
    }
  } @else if ($t == 'border') {
    @if (length($values) == 1) {
      #{$t}: $values;
      #{$t}-block-start: $values;
      #{$t}-inline-start: $values;
      #{$t}-block-end: $values;
      #{$t}-inline-end: $values;
    } @else if (length($values) == 2) {

      @if ($wm == 'ver-l') {
        #{$t}-top: nth($values, 2);
        #{$t}-right: nth($values, 1);
        #{$t}-bottom: nth($values, 2);
        #{$t}-left: nth($values, 1);
      } @else if ($wm == 'ver-r') {
        #{$t}-top: nth($values, 2);
        #{$t}-right: nth($values, 1);
        #{$t}-bottom: nth($values, 2);
        #{$t}-left: nth($values, 1);
      } @else {
        #{$t}-top: nth($values, 1);
        #{$t}-right: nth($values, 2);
        #{$t}-bottom: nth($values, 1);
        #{$t}-left: nth($values, 2);
      }
      #{$t}-block-start: nth($values, 1);
      #{$t}-inline-start: nth($values, 2);
      #{$t}-block-end: nth($values, 1);
      #{$t}-inline-end: nth($values, 2);
    } @else if (length($values) == 3) {

      @if ($wm == 'ver-l') {
        #{$t}-top: nth($values, 2);
        #{$t}-right: nth($values, 3);
        #{$t}-bottom: nth($values, 2);
        #{$t}-left: nth($values, 1);
      } @else if ($wm == 'ver-r') {
        #{$t}-top: nth($values, 2);
        #{$t}-right: nth($values, 1);
        #{$t}-bottom: nth($values, 2);
        #{$t}-left: nth($values, 3);
      } @else {
        #{$t}-top: nth($values, 1);
        #{$t}-right: nth($values, 2);
        #{$t}-bottom: nth($values, 3);
        #{$t}-left: nth($values, 2);
      }
      #{$t}-block-start: nth($values, 1);
      #{$t}-inline-start: nth($values, 2);
      #{$t}-block-end: nth($values, 3);
      #{$t}-inline-end: nth($values, 2);
    } @else if (length($values) == 4) {

      @if ($wm == 'ver-l') {
        #{$t}-top: nth($values, 4);
        #{$t}-right: nth($values, 3);
        #{$t}-bottom: nth($values, 2);
        #{$t}-left: nth($values, 1);
      } @else if ($wm == 'ver-r') {
        #{$t}-top: nth($values, 4);
        #{$t}-right: nth($values, 1);
        #{$t}-bottom: nth($values, 2);
        #{$t}-left: nth($values, 3);
      } @else {
        #{$t}-top: nth($values, 1);
        #{$t}-right: nth($values, 2);
        #{$t}-bottom: nth($values, 3);
        #{$t}-left: nth($values, 4);
      }
      #{$t}-block-start: nth($values, 1);
      #{$t}-inline-start: nth($values, 4);
      #{$t}-block-end: nth($values, 3);
      #{$t}-inline-end: nth($values, 2);
    }
  } @else if ($t == 'height') {
    @if (length($values) == 1) {

      @if ($wm == 'ver-l') or ($wm == 'ver-r') {
        #{$t}: $values;
        inline-size: $values;
      } @else {
        #{$t}: $values;
        block-size: $values;
      }
    } @if (length($values) == 2) {

      @if ($wm == 'ver-l') or ($wm == 'ver-r') {
        #{$t}: nth($values, 1);
        inline-size: nth($values, 1);
        min-width: nth($values, 2);
        min-inline-size: nth($values, 2);
      } @else {
        #{$t}: nth($values, 1);
        block-size: nth($values, 1);
        min-#{$t}: nth($values, 2);
        min-block-size: nth($values, 2);
      }
    } @if (length($values) == 3) {

      @if ($wm == 'ver-l') or ($wm == 'ver-r') {
        width: nth($values, 1);
        inline-size: nth($values, 1);
        min-width: nth($values, 2);
        min-inline-size: nth($values, 2);
        max-width: nth($values, 3);
        max-inline-size: nth($values, 3);
      } @else {
        #{$t}: nth($values, 1);
        block-size: nth($values, 1);
        min-#{$t}: nth($values, 2);
        min-block-size: nth($values, 2);
        max-#{$t}: nth($values, 3);
        max-block-size: nth($values, 3);
      }
    }
  } @else if ($t == 'width') {
    @if (length($values) == 1) {

      @if ($wm == 'ver-l') or ($wm == 'ver-r') {
        #{$t}: $values;
        block-size: $values;
      } @else {
        #{$t}: $values;
        inline-size: $values;
      }
    } @if (length($values) == 2) {

      @if ($wm == 'ver-l') or ($wm == 'ver-r') {
        height: nth($values, 1);
        block-size: nth($values, 1);
        min-height: nth($values, 2);
        min-block-size: nth($values, 2);
      } @else {
        #{$t}: nth($values, 1);
        inline-size: nth($values, 1);
        min-#{$t}: nth($values, 2);
        min-inline-size: nth($values, 2);
      }
    } @if (length($values) == 3) {

      @if ($wm == 'ver-l') or ($wm == 'ver-r') {
        height: nth($values, 1);
        block-size: nth($values, 1);
        min-height: nth($values, 2);
        min-block-size: nth($values, 2);
        max-height: nth($values, 3);
        max-block-size: nth($values, 3);
      } @else {
        #{$t}: nth($values, 1);
        inline-size: nth($values, 1);
        min-#{$t}: nth($values, 2);
        min-inline-size: nth($values, 2);
        max-#{$t}: nth($values, 3);
        max-inline-size: nth($values, 3);
      }
    }
  } @else if ($t == 'float') {
    @if (nth($values, 1) == 'left') {
      #{$t}: $values;
      #{$t}: inline-start;
    } @else if(nth($values, 1) == 'right') {
      #{$t}: $values;
      #{$t}: inline-end;
    }
  } @else if ($t == 'text-align') {
    @if (nth($values, 1) == 'left') {
      #{$t}: $values;
      #{$t}: start;
    } @else if(nth($values, 1) == 'right') {
      #{$t}: $values;
      #{$t}: end;
    }
  }
}

@mixin position($t, $b-start: null, $i-start: null, $b-end: null, $i-end: null) {
  @if ($t == 'absolute') {
    position: absolute;
  } @else if ($t == 'relative') {
    position: relative;
  };
  top: $b-start;
  right: $i-end;
  bottom: $b-end;
  left: $i-start;
  inset-block-start: $b-start;
  inset-block-end: $b-end;
  inset-inline-start: $i-end;
  inset-inline-end: $i-start;
}
